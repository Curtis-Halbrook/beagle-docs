<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beagle ‚Äì Recursos</title>
    <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/</link>
    <description>Recent content in Recursos on Beagle</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://zupit.github.io/docs-beagle/pt/docs/recursos/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Cache</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/cache/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;Atualmente, existem &lt;strong&gt;duas camadas de cache&lt;/strong&gt; no Beagle:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uma camada vol√°til&lt;/li&gt;
&lt;li&gt;Uma camada persistente.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A camada vol√°til hoje depende da camada persistente, no sentido que apenas itens cacheadas na camada persistente s√£o candidatos para o cache vol√°til.&lt;/p&gt;
&lt;h2 id=&#34;camadas-de-cache&#34;&gt;Camadas de cache&lt;/h2&gt;
&lt;h3 id=&#34;cache-vol√°til&#34;&gt;Cache vol√°til&lt;/h3&gt;
&lt;p&gt;√â o cache que fica na mem√≥ria da aplica√ß√£o frontend e que √© usado para reduzir a quantidade de chamadas ao backend.&lt;/p&gt;
&lt;p&gt;As entradas nesta camada do cache t√™m dura√ß√£o por tempo, definida nas configura√ß√µes gerais de cache de cada plataforma de cliente.&lt;/p&gt;
&lt;p&gt;Voc√™ pode checar como &lt;strong&gt;configurar o cache&lt;/strong&gt; de acordo com sua plataforma, no link abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;configurando-o-cache.md#configurando-o-cache-e-customizacao&#34;&gt;&lt;strong&gt;Configurando o cache&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cache-persistente&#34;&gt;Cache persistente&lt;/h3&gt;
&lt;p&gt;Nesta camada de cache, existem duas localiza√ß√µes. S√£o elas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Na mem√≥ria do backend;&lt;/li&gt;
&lt;li&gt;No armazenamento do frontend.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Este cache √© usado para otimizar a resposta do BFF - tanto em tempo quanto em tamanho -, em casos que n√£o h√° mudan√ßa. As entradas neste cache duram at√© o servidor refazer o deploy ou o cliente ser reinstalado.&lt;/p&gt;
&lt;p&gt;A premissa para que este cache funcione √© que ele deve sempre retornar o mesmo JSON para a mesma requisi√ß√£o. Para que uma requisi√ß√£o seja considerada igual, √© necess√°rio que tenha o mesmo endpoint e a mesma plataforma especificada como mostra nossa &lt;a href=&#34;../componentes/platform-sorting.md&#34;&gt;&lt;strong&gt;especifica√ß√£o de plataformas&lt;/strong&gt;.&lt;/a&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-danger&#34; role=&#34;alert&#34;&gt;

√â importante destacar que o mecanismo de cache &lt;strong&gt;n√£o deve&lt;/strong&gt; ser utilizado em &lt;strong&gt;endpoints&lt;/strong&gt; que n√£o atendam a essa &lt;strong&gt;premissa&lt;/strong&gt;. Ele pode ser ativado ou desativado no BFF por endpoint ou para o BFF inteiro.
&lt;/div&gt;

&lt;h2 id=&#34;como-o-protocolo-de-cache-funciona&#34;&gt;Como o protocolo de cache funciona?&lt;/h2&gt;
&lt;p&gt;O protocolo atua no cabe√ßalho &lt;code&gt;beagle-hash&lt;/code&gt;. O BFF, por sua vez, valida os hashes recebidos e envia uma resposta completa ou apenas o &lt;code&gt;status HTTP 304 Not Modified&lt;/code&gt; (sem um corpo).&lt;/p&gt;
&lt;p&gt;Quando o BFF responde com o &lt;code&gt;status 304&lt;/code&gt;, o aplicativo carrega do elemento em cache. Caso isto n√£o aconte√ßa, ele armazena os dados recebidos (hash e JSON) e renderiza os elementos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/beaglesave.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;pr√≥ximos-passos&#34;&gt;Pr√≥ximos passos&lt;/h2&gt;
&lt;p&gt;üëâ Veja como fazer as &lt;a href=&#34;configurando-o-cache.md#configurando-e-customizando-o-cache&#34;&gt;&lt;strong&gt;configura√ß√µes de cache&lt;/strong&gt;&lt;/a&gt; de acordo com cada plataforma (Android, iOS, Web e Backend).&lt;/p&gt;
&lt;p&gt;üëâConfira o &lt;a href=&#34;configurando-o-cache.md#como-funciona-o-cache&#34;&gt;&lt;strong&gt;funcionamento do cache&lt;/strong&gt;&lt;/a&gt; de acordo com seus tipos (confi√°vel e n√£o confi√°vel)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Posicionamento de componentes</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/posicionamento-de-componentes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/posicionamento-de-componentes/</guid>
      <description>
        
        
        &lt;hr&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

&lt;h4 id=&#34;disponibilidade-beagle-10&#34;&gt;Disponibilidade: Beagle 1.0+&lt;/h4&gt;

&lt;/div&gt;

&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;&lt;strong&gt;Introdu√ß√£o&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;No Beagle, voc√™ ter√° de usar uma depend√™ncia chamada&lt;a href=&#34;https://yogalayout.com/docs/&#34;&gt; &lt;strong&gt;Yoga Layout&lt;/strong&gt;&lt;/a&gt; para posicionar os componentes na tela da sua aplica√ß√£o.&lt;/p&gt;
&lt;p&gt;Para fazer isso, o Yoga faz os c√°lculos necess√°rios para posicionar os elementos e, depois disso, faz a sua renderiza√ß√£o.&lt;/p&gt;
&lt;h2 id=&#34;sobre-o-yoga-layout&#34;&gt;&lt;strong&gt;Sobre o Yoga Layout&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;O Yoga √© um framework Android e iOS desenvolvido pelo Facebook para posicionar views usando o conceito do Flexbox.&lt;/p&gt;
&lt;p&gt;O Flexbox organiza os elementos dentro de containers de forma din√¢mica para que, independente das dimens√µes da sua aplica√ß√£o, voc√™ possa manter um layout flex√≠vel.&lt;/p&gt;
&lt;p&gt;Alguns conceitos chave para entender o Flexbox s√£o:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Main Axis:&lt;/strong&gt; eixo horizontal&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cross Axis:&lt;/strong&gt; eixo vertical&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Main Size:&lt;/strong&gt; tamanho da dimens√£o dos eixos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No caso do Main Size, √© poss√≠vel ter &lt;strong&gt;3 tipos diferentes de dimens√µes:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Cross Size:&lt;/strong&gt; Tamanho da dimens√£o cross axis.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Main Start and Main End:&lt;/strong&gt; Come√ßo e o fim do main axis.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cross Start and Cross End:&lt;/strong&gt; Come√ßo e o fim do cross axis.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;‚Äå&lt;/strong&gt;Estes eixos dependem do valor atribu√≠do √† propriedade flex-direction para definir a orienta√ß√£o dos elementos em tela.&lt;/p&gt;
&lt;p&gt;Se esta propriedade receber o valor:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;row ou row-reverse:&lt;/strong&gt; o main axis do container ser√° o horizontal e o cross axis ser√° vertical.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/YwCLX11cEtBYnUcVYIDy63Z_aoEA5rfErFyOKSOgxZA092HmcFO7ZwDKgKJ6Tmjr-J3m7aQgSYCn2p0QzSLO_NsibCWc7LCg9Y2xDjVXQ6BWyhIjYpB3tCdbKx-4CnrKG7tSzaqp&#34; alt=&#34;Exemplo de yoga layout com row ou row-reverse&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;column ou column-reverse:&lt;/strong&gt; o main axis do container ser√° vertical e o cross axis ser√° horizontal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/AM1cTOExo5ux4V_2-HE6WItbPdTWHj-6CBwDXxo8mV0vZfw6WoxtWWOUtosLU_UTTAArH_pMm35geJE1HBfYjqT-DBshvLsUcjvCmVoQVdPSGTW8QCx8YJltIgC4Ad9cDKFu1dQ4&#34; alt=&#34;Exemplo de yoga layout com column ou column-reverse&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Importante ressaltar que o default do Beagle √© o valor &lt;code&gt;column&lt;/code&gt;ou seja, os elementos ser√£o dispostos em colunas por padr√£o.
&lt;/div&gt;

&lt;h2 id=&#34;propriedades-dispon√≠veis&#34;&gt;Propriedades dispon√≠veis&lt;/h2&gt;
&lt;p&gt;A partir do Yoga Layout, voc√™ pode utilizar as seguintes propriedades para inserir, alterar ou eliminar componentes em tela:&lt;/p&gt;
&lt;h3 id=&#34;unitvalue&#34;&gt;&lt;strong&gt;UnitValue&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;As propriedades &lt;strong&gt;Basis, Size, Margin, Padding e Position&lt;/strong&gt; descritas acima recebem  um &lt;code&gt;UnitValue&lt;/code&gt; que espera um valor&lt;code&gt;Double&lt;/code&gt;e um &lt;code&gt;UnitType&lt;/code&gt;, que √© um &lt;code&gt;enum&lt;/code&gt;com as seguintes op√ß√µes:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;UnitType&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Defini√ß√£o&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;REAL&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Aplica o valor &lt;code&gt;Double&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;PERCENT&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Aplica o valor &lt;code&gt;Double&lt;/code&gt;  em forma de percentual do tamanho do pai&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;AUTO&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Segue o valor do pai. Exceto quando possui tamanho pr√≥prio&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Para as propriedades listadas abaixo, na Web, o &lt;code&gt;default&lt;/code&gt;  √©  &lt;code&gt;UnitType.AUTO&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;UnitType.AUTO&lt;/code&gt; pode ser usado nas frentes iOS, Android e Web de acordo com a tabela abaixo:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&#34;text-align:center&#34;&gt;Propriedade&lt;/th&gt;
      &lt;th style=&#34;text-align:center&#34;&gt;
        &lt;p&gt;
          &lt;img src=&#34;../../.gitbook/assets/image (125).png&#34; alt/&gt;
        &lt;/p&gt;
        &lt;p&gt;iOS&lt;/p&gt;
      &lt;/th&gt;
      &lt;th style=&#34;text-align:center&#34;&gt;
        &lt;p&gt;
          &lt;img src=&#34;../../.gitbook/assets/image (126).png&#34; alt/&gt;
        &lt;/p&gt;
        &lt;p&gt;Android&lt;/p&gt;
      &lt;/th&gt;
      &lt;th style=&#34;text-align:center&#34;&gt;
        &lt;p&gt;
          &lt;img src=&#34;../../.gitbook/assets/image (122).png&#34; alt/&gt;
        &lt;/p&gt;
        &lt;p&gt;Web&lt;/p&gt;
      &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Basis&lt;/b&gt;
      &lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&amp;#x2714;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&amp;#x2714;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&amp;#x2714;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Size&lt;/b&gt;
      &lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&amp;#x2714;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Margin&lt;/b&gt;
      &lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&amp;#x2714;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Padding&lt;/b&gt;
      &lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&amp;#x2714;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;b&gt;Position&lt;/b&gt;
      &lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
      &lt;td style=&#34;text-align:center&#34;&gt;&amp;#x2714;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Componentes</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/componentes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/componentes/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;Confira abaixo quais configura√ß√µes √© poss√≠vel fazer com os componentes do Beagle:&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Customiza√ß√£o</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/customiza%C3%A7%C3%A3o/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/customiza%C3%A7%C3%A3o/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;O Beagle disponibiliza na sua biblioteca algumas customiza√ß√µes. Voc√™ pode conhecer melhor o processo para cada biblioteca nas pr√≥ximas p√°ginas:&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Cria√ß√£o de novas a√ß√µes</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/cria%C3%A7%C3%A3o-de-novas-a%C3%A7%C3%B5es/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/cria%C3%A7%C3%A3o-de-novas-a%C3%A7%C3%B5es/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h3 id=&#34;criando-a-a√ß√£o-no-frontend&#34;&gt;Criando a a√ß√£o no frontend&lt;/h3&gt;
&lt;p&gt;No Beagle, √© poss√≠vel criar uma &lt;a href=&#34;../api/acoes/&#34;&gt;&lt;strong&gt;a√ß√£o&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;customizada&lt;/strong&gt; a partir de uma &lt;code&gt;CustomAction&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Cada plataforma tem sua forma pr√≥pria para fazer esta implementa√ß√£o no frontend. Abaixo, listamos exemplos para cada uma.&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t90&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t90-0&#34; role=&#34;tab&#34; aria-controls=&#34;t90-0&#34; aria-selected=&#34;true&#34;&gt;Android&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t90-1&#34; role=&#34;tab&#34; aria-controls=&#34;t90-1&#34;&gt;iOS&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t90-2&#34; role=&#34;tab&#34; aria-controls=&#34;t90-2&#34;&gt;Web&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t90&#34;&gt;&lt;div id=&#34;t90-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t90-0&#34;&gt;

&lt;p&gt;&lt;p&gt;Primeiro, voc√™ deve criar uma classe anotada com &lt;code&gt;@RegisterAction&lt;/code&gt; que implemente a &lt;strong&gt;interface&lt;/strong&gt; &lt;code&gt;Action&lt;/code&gt;. Esta mesma interface solicitar√° que o m√©todo &lt;code&gt;execute&lt;/code&gt; seja implementado e, aqui, voc√™ ir√° declarar o resultado da &lt;code&gt;action&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O atributo &lt;code&gt;msg&lt;/code&gt; listado √© apenas um exemplo de par√¢metro que pode ser declarado no construtor desta classe. O exemplo a seguir mostra uma a√ß√£o com &lt;strong&gt;Toast:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@RegisterAction&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CustomAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Action&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rootView&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;RootView&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;Toast&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;makeText&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;rootView&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getContext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
            &lt;span style=&#34;color:#000&#34;&gt;Toast&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LENGTH_LONG&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;show&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t90-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t90-1&#34;&gt;

&lt;p&gt;&lt;p&gt;Primeiro, voc√™ deve criar uma classe que implemente o tipo &lt;code&gt;Action&lt;/code&gt;. Esta mesma classe solicitar√° que o m√©todo &lt;code&gt;execute&lt;/code&gt; seja implementado e ir√° ditar as a√ß√µes da &lt;code&gt;action&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;O atributo &lt;code&gt;msg&lt;/code&gt; listado √© apenas um exemplo de par√¢metro que pode ser declarado no construtor desta classe. O exemplo a seguir mostra uma a√ß√£o com &lt;strong&gt;&lt;code&gt;Alert&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CustomAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Action&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?&lt;/span&gt;
    
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;controller&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BeagleController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sender&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Any&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;   
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;alert&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UIAlertController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
        &lt;span style=&#34;color:#000&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
        &lt;span style=&#34;color:#000&#34;&gt;preferredStyle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;alert&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        
        &lt;span style=&#34;color:#000&#34;&gt;controller&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;present&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;alert&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;animated&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para registrar a a√ß√£o, basta criar um m√©todo onde ter√° todas suas &lt;code&gt;custom action&lt;/code&gt; e chamar o m√©todo do Beagle &lt;code&gt;registerCustomAction&lt;/code&gt; que far√° o registro.&lt;/p&gt;
&lt;p&gt;Chame o &lt;a href=&#34;../get-started/new-project/case-ios/#passo-2-configurando-o-beagle&#34;&gt;&lt;strong&gt;m√©todo criado no BeagleConfig&lt;/strong&gt;&lt;/a&gt;, tal como no tutorial da se√ß√£o &lt;a href=&#34;../get-started/new-project/case-ios/#iniciando-um-projeto-ios&#34;&gt;&lt;strong&gt;&amp;ldquo;Criando um projeto do zero&amp;rdquo;.&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;registerCustomAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
   &lt;span style=&#34;color:#000&#34;&gt;Beagle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;registerCustomAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CustomAction&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;actionType&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CustomAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t90-2&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t90-2&#34;&gt;

&lt;p&gt;&lt;p&gt;Primeiro, voc√™ deve criar uma interface com a propriedade obrigat√≥ria &lt;code&gt;_beagleAction_&lt;/code&gt; __e os par√¢metros necess√°rios para sua a√ß√£o. Para este exemplo, criaremos o atributo &lt;code&gt;msg&lt;/code&gt; do tipo &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Em __&lt;code&gt;_beagleAction_&lt;/code&gt; , coloque o nome da a√ß√£o customizada seguindo o padr√£o &amp;lsquo;custom:nomeDaA√ß√£o&amp;rsquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CustomAction&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;_beagleAction_&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;custom:CustomAction&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;string&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Feito isso, declare uma fun√ß√£o do tipo &lt;code&gt;ActionHandler&lt;/code&gt; com a interface que voc√™ acabou de criar.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ActionHandler&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;@zup-it/beagle-web&amp;#39;&lt;/span&gt;


&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;customHandler&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ActionHandler&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CustomAction&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;action&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;       Podemos acessar nosso par√¢metro definido na interface, por exemplo 
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;       action.msg nos traz o valor de msg.
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    */&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;alert&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Por fim, adicione o nome da a√ß√£o no arquivo de associa√ß√µes de acordo com cada framework:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Para o Angular,&lt;/strong&gt; adicione em beagle.module.ts&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a40000&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BeagleModule&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;({&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;customActions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;custom:CustomAction&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;customHandler&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//nome do action handler
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Beagle&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Para o React,&lt;/strong&gt; adicione ao seu arquivo de configura√ß√µes do Beagle&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;createBeagleUIService&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;any&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;({&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;customActions&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;custom:CustomAction&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;customHandler&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//nome do action handler
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&#34;criando-a-refer√™ncia-da-a√ß√£o-no-backend&#34;&gt;Criando a refer√™ncia da a√ß√£o no backend&lt;/h3&gt;
&lt;p&gt;Para criar a refer√™ncia, o seu c√≥digo deve ficar assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@RegisterAction&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CustomAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Action&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Abaixo, temos um exemplo de Action em um componente do tipo Bot√£o.&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t90&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t90-0&#34; role=&#34;tab&#34; aria-controls=&#34;t90-0&#34; aria-selected=&#34;true&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t90-1&#34; role=&#34;tab&#34; aria-controls=&#34;t90-1&#34;&gt;Kotlin DSL&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t90&#34;&gt;&lt;div id=&#34;t90-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t90-0&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_beagleComponent_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;beagle:button&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Beagle Button&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;onPress&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_beagleAction_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;custom:customAction&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;msg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Eu sou um Toast.&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t90-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t90-1&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;Button&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
   &lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Beagle Button&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#000&#34;&gt;onPress&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;listOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CustomAction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Eu sou um Toast&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Builders para Kotlin Dsl</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/builders-para-kotlin-dsl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/builders-para-kotlin-dsl/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;O Beagle fornece duas maneiras para definir seus componentes utilizando builders.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Builder padr√£o&lt;/li&gt;
&lt;li&gt;Builder DSL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Com eles, voc√™ consegue usar os componentes da plataforma de forma declarativa com Kotlin ou de uma maneira mais pr√°tica para montar os componentes com seus valores padr√µes, caso esteja utilizando Java ao inv√©s de Kotlin.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Voc√™ pode misturar as 3 maneiras dispon√≠veis para definir um componente.
&lt;/div&gt;

&lt;h2 id=&#34;builder-padr√£o&#34;&gt;Builder padr√£o&lt;/h2&gt;
&lt;p&gt;A maneira de usar os builders padr√µes do Beagle √© semelhante a qualquer outro builder que voc√™ j√° tenha utilizado. O nome de cada builder de forma geral √© o nome do componente com o sufixo Builder anexado.&lt;/p&gt;
&lt;p&gt;As &lt;strong&gt;exce√ß√µes&lt;/strong&gt; s√£o componentes do tipo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sealed classes&lt;/code&gt;, cujo builders possuem o nome de sua classe pai como prefixo anexado.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Screen&lt;/code&gt;, cujo builder √© &lt;code&gt;ScreenComponentBuilder&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t91&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t91-0&#34; role=&#34;tab&#34; aria-controls=&#34;t91-0&#34; aria-selected=&#34;true&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t91-1&#34; role=&#34;tab&#34; aria-controls=&#34;t91-1&#34;&gt;Kotlin DSL&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t91&#34;&gt;&lt;div id=&#34;t91-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t91-0&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Navigate √© uma sealed class com 
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//OpenNativeRoute como uma classe filha
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;NavigateOpenNativeRouteBuilder&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;route&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/route&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;shouldResetApplication&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;HashMap&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;())&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t91-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t91-1&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//Navigate √© uma sealed class com 
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//OpenNativeRoute como uma classe filha
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;NavigateOpenNativeRouteBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;route&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/route&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;shouldResetApplication&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mutableMapOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;())&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&#34;builder-dsl&#34;&gt;Builder DSL&lt;/h2&gt;
&lt;p&gt;Para definir um componente do Beagle utilizando esse m√©todo, voc√™ deve declarar o componente e suas propriedades utilizando chaves e m√©todos com o mesmo nome do campo a ser declarado ou diretamente pelo operador de atribui√ß√£o (=). Veja o exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;alert&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Titulo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; 
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//utilizando as chaves
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Message&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//utilizando os m√©todos
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;labelOk&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//atribuindo o valor diretamente
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//equivalente
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Alert&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Titulo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Message&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;labelOk&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nos casos em que o campo espera uma &lt;strong&gt;lista ou um mapa&lt;/strong&gt;,  voc√™ deve colocar antes do elemento a ser adicionado na cole√ß√£o com o operador &amp;lsquo;&lt;strong&gt;+&lt;/strong&gt;&amp;rsquo;.  Esse operador tamb√©m aceita elemento √∫nico.  Veja os exemplos:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t91&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t91-0&#34; role=&#34;tab&#34; aria-controls=&#34;t91-0&#34; aria-selected=&#34;true&#34;&gt;Listas&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t91-1&#34; role=&#34;tab&#34; aria-controls=&#34;t91-1&#34;&gt;Mapas&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t91&#34;&gt;&lt;div id=&#34;t91-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t91-0&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;container&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;children&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;There&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;listOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;General&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Kenobi&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//equivalente
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Container&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;children&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;listOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;There&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;General&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Kenobi&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t91-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t91-1&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;navigateOpenNativeRoute&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; 
    &lt;span style=&#34;color:#000&#34;&gt;route&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/route&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;shouldResetApplication&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mapOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//equivalente
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Navigate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;OpenNativeRoute&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;route&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/route&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;shouldResetApplication&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mapOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&#34;exemplo&#34;&gt;Exemplo&lt;/h3&gt;
&lt;p&gt;O exemplo abaixo define uma tela simples declarada nas tr√™s maneiras dispon√≠veis pelo Beagle:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t91&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t91-0&#34; role=&#34;tab&#34; aria-controls=&#34;t91-0&#34; aria-selected=&#34;true&#34;&gt;Padr√£o&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t91-1&#34; role=&#34;tab&#34; aria-controls=&#34;t91-1&#34;&gt;Builder DSL&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t91-2&#34; role=&#34;tab&#34; aria-controls=&#34;t91-2&#34;&gt;Builder Padr√£o&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t91&#34;&gt;&lt;div id=&#34;t91-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t91-0&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;Screen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;navigationBar&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;NavigationBar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Navigation Bar Title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;showBackButton&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;child&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello There&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;applyStyle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;margin&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;EdgeValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bottom&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.u&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nitReal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;())&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t91-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t91-1&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;screen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;navigationBar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Navigation Bar Title&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;showBackButton&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;child&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello There&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;style&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; 
            &lt;span style=&#34;color:#000&#34;&gt;margin&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#000&#34;&gt;bottom&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.u&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nitReal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t91-2&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t91-2&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;ScreenComponentBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;navigationBar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;NavigationBarBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Navigation Bar Title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;showBackButton&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;child&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;TextBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;valueOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello There&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;applyStyle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                &lt;span style=&#34;color:#000&#34;&gt;StyleBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;margin&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                        &lt;span style=&#34;color:#000&#34;&gt;EdgeValueBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bottom&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.u&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nitReal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;())&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Estiliza√ß√£o</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/estiliza%C3%A7%C3%A3o/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/estiliza%C3%A7%C3%A3o/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;O Beagle disponibiliza na sua biblioteca o recurso de estiliza√ß√£o de componentes. Voc√™ pode conhecer melhor o processo para cada sistema operacional nas pr√≥ximas p√°ginas:&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Live Preview</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/live-preview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/live-preview/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;&lt;strong&gt;Introdu√ß√£o&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;O Live Preview √© um recurso de visualiza√ß√£o que auxilia no desenvolvimento de &lt;code&gt;layouts&lt;/code&gt;.  Ele permite que as telas em desenvolvimento sejam renderizadas sem a necessidade de subir seu servidor backend para as altera√ß√µes de &lt;em&gt;layout&lt;/em&gt; feitas, reduzindo, assim, o tempo de desenvolvimento de uma tela.&lt;/p&gt;
&lt;p&gt;Em outras palavras, o Live Preview d√° a op√ß√£o de editar um c√≥digo que define a tela e, assim, o desenvolvedor pode utilizar o plugin para que as atualiza√ß√µes sejam comunicadas ao cliente e ele as renderize.&lt;/p&gt;
&lt;p&gt;Desta forma, √© poss√≠vel visualizar as mudan√ßas sem precisar subir um servidor backend.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Esta conex√£o entre frontend e backend √© feita via &lt;code&gt;WebSocket&lt;/code&gt; utilizando a porta :&lt;code&gt;9721&lt;/code&gt;
&lt;/div&gt;

&lt;h2 id=&#34;requisitos&#34;&gt;Requisitos&lt;/h2&gt;
&lt;p&gt;Para usar o &lt;code&gt;Live Preview&lt;/code&gt; voc√™ deve:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Usar o &lt;a href=&#34;../get-started/installing-beagle/beagle-backend.md&#34;&gt;&lt;strong&gt;Beagle SDK&lt;/strong&gt;&lt;/a&gt; em seu BFF**;**&lt;/li&gt;
&lt;li&gt;Instalar o &lt;code&gt;BeaglePreview&lt;/code&gt; plugin;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configura√ß√£o-do-bff&#34;&gt;Configura√ß√£o do BFF&lt;/h3&gt;
&lt;p&gt;Voc√™ precisa que seu BFF esteja configurado com o Beagle para utilizar o Live Preview. Caso ainda n√£o o tenha, fa√ßa o &lt;a href=&#34;https://github.com/ZupIT/beagle-examples/tree/master/BeagleSampleBackend&#34;&gt;&lt;strong&gt;download de um projeto inicial pronto&lt;/strong&gt;&lt;/a&gt;. Outra possibilidade que voc√™ pode fazer, √© o nosso tutorial de &lt;a href=&#34;../get-started/new-project/exemplo-de-projeto-backend-com-beagle.md&#34;&gt;&lt;strong&gt;como implementar um backend&lt;/strong&gt;&lt;/a&gt; com o Beagle configurado.&lt;/p&gt;
&lt;h3 id=&#34;instala√ß√£o-do-plugin-intellij&#34;&gt;Instala√ß√£o &lt;strong&gt;do plugin IntelliJ&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Para instalar o &lt;code&gt;BeaglePreview&lt;/code&gt; entre no link abaixo e clique na op√ß√£o instalar na IDE:&lt;/p&gt;
&lt;p&gt;{% embed url=&amp;ldquo;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/14575-beagle-sdk-live-preview%22&#34;&gt;https://plugins.jetbrains.com/plugin/14575-beagle-sdk-live-preview&amp;quot;&lt;/a&gt; caption=&amp;ldquo;Plugin do Live Preview para IntelliJ&amp;rdquo; %}}&lt;/p&gt;
&lt;h2 id=&#34;uso-do-live-preview&#34;&gt;Uso do Live Preview&lt;/h2&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Voc√™ &lt;strong&gt;deve configurar&lt;/strong&gt; tanto o backend quanto o frontend para esse Live Preview. O frontend pode ser cliente Android ou iOS.
&lt;/div&gt;

&lt;h3 id=&#34;passo-1-configurar-o-backend&#34;&gt;Passo 1: Configurar o Backend&lt;/h3&gt;
&lt;p&gt;Os passos a seguir nos permitir√£o visualizar uma tela definida no &lt;code&gt;backend&lt;/code&gt; usando o Live Preview:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Vamos criar uma tela declarativa para teste. O c√≥digo mais adiante trar√° uma tela bem simples como exemplo.&lt;/li&gt;
&lt;li&gt;Iremos criar uma fun√ß√£o que retorna a tela a ser visualizada pelo plugin.&lt;/li&gt;
&lt;li&gt;Por fim, vamos anotar essa fun√ß√£o com &lt;code&gt;@BeaglePreview&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Feito isso, o Live Preview j√° ser√° capaz de receber a tela em desenvolvimento a ser renderizada.&lt;/p&gt;
&lt;p&gt;Alguns pontos interessantes de se notar do exemplo abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Perceba que a tela em si est√° definida na classe &lt;code&gt;ScreenBeagleBuilder.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A fun√ß√£o &lt;code&gt;buildPreview&lt;/code&gt; est√° anotada com &lt;code&gt;@BeaglePreview&lt;/code&gt;, com isso o plugin consegue utilizar ela para renderizar a tela.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeaglePreview&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;buildPreview&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenBeagleBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenBeagleBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenBuilder&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Screen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;child&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Container&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;children&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;listOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Live Preview!!!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se sua fun√ß√£o for reconhecida pelo plugin, o s√≠mbolo do Beagle aparecer√° como um bot√£o √† esquerda da fun√ß√£o. Clicando neste bot√£o, o &lt;code&gt;BeaglePreview&lt;/code&gt; faz um push do layout para o cliente (aplica√ß√£o frontend), permitindo que ele atualize seu layout instantaneamente.&lt;/p&gt;
&lt;p&gt;Veja como no exemplo abaixo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/livepreviewpluginintellijidea.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Depois de acionar o plugin para alguma fun√ß√£o, basta voc√™ salvar as modifica√ß√µes realizadas no seu layout para que o Live Preview atualize a tela sendo renderizada pelo frontend.&lt;/p&gt;
&lt;p&gt;O Live Preview faz isso ao compilar seu c√≥digo modificado e verificar se existe alguma altera√ß√£o a ser feita. Se for o caso, ele faz o push de seu novo layout para o cliente.&lt;/p&gt;
&lt;h3 id=&#34;passo-2-configurar-o-frontend-ios-e-android&#34;&gt;Passo 2: Configurar o frontend iOS e Android&lt;/h3&gt;
&lt;p&gt;Uma vez configurado o seu backend, o pr√≥ximo passo √© configurar o emulador no frontend da sua aplica√ß√£o com um projeto Beagle Android ou  Beagle iOS.&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t96&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t96-0&#34; role=&#34;tab&#34; aria-controls=&#34;t96-0&#34; aria-selected=&#34;true&#34;&gt;Cliente Android&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t96-1&#34; role=&#34;tab&#34; aria-controls=&#34;t96-1&#34;&gt;Cliente iOS&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t96&#34;&gt;&lt;div id=&#34;t96-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t96-0&#34;&gt;

&lt;p&gt;&lt;h3 id=&#34;passo-1-instalar-o-subm√≥dulo&#34;&gt;Passo 1: Instalar o subm√≥dulo&lt;/h3&gt;
&lt;p&gt;Para realizar a instala√ß√£o, seu arquivo de &lt;code&gt;gradle&lt;/code&gt; deve conter o fragmento abaixo:&lt;/p&gt;
&lt;p&gt;A vers√£o atual do Beagle :&lt;a href=&#34;https://raster.shields.io/bintray/v/zupit/repo/beagle&#34;&gt;![https://img.shields.io/bintray/v/zupit/repo/beagle](https://img.shields.io/bintray/v/zupit/repo/beagle&lt;/a&gt;]()&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Add in your plugins
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;apply&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;plugin&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kotlin&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kapt&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Add in your app level dependency
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;beagle_version&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${beagle_version}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
 
&lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;br.com.zup.beagle:android:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;$beagle_version&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;kapt&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;br.com.zup.beagle:android-processor:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;$beagle_version&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
    
    &lt;span style=&#34;color:#000&#34;&gt;debugImplementation&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;br.com.zup.beagle:android-preview:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;$beagle_version&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Em &lt;code&gt;ext.beagle_version = &amp;quot;${beagle_version}&amp;quot;&lt;/code&gt;, insira a vers√£o de release do Beagle no lugar de &lt;code&gt;${beagle.version}&lt;/code&gt;. Ou seja, coloque a vers√£o do Beagle destacada em azul da badge acima, mas sem o &lt;strong&gt;caracter v&lt;/strong&gt; que antecede os n√∫meros de vers√£o.&lt;/p&gt;
&lt;p&gt;Por exemplo:undefined-&lt;code&gt;ext.beagle.version = &amp;quot;0.2.8&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Feito isso, voc√™ pode atualizar suas depend√™ncias.&lt;/p&gt;
&lt;h3 id=&#34;passo-2-criar-uma-preview-activity&#34;&gt;Passo 2: Criar uma Preview Activity&lt;/h3&gt;
&lt;p&gt;Antes de tudo, √© necess√°rio declarar uma &lt;code&gt;PreviewActivity&lt;/code&gt; no manifesto da aplica√ß√£o para mostrar a pr√©-visualiza√ß√£o:&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;p&gt;Aqui n√£o √© necess√°rio criar uma Activity de fato, pois ela j√° est√° criada internamente no Beagle. Voc√™ deve somente refer√™ncia-la no manifesto indicando que ela faz parte do hall de Activities acess√≠veis nessa aplica√ß√£o&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Copie e cole a Activity abaixo em seu &lt;strong&gt;&lt;code&gt;AndroidManifest&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;...
    &amp;lt;application&amp;gt;
        ...
        &amp;lt;activity
            android:exported=&amp;quot;true&amp;quot;
            android:name=&amp;quot;br.com.zup.beagle.android.preview.PreviewActivity&amp;quot;
            android:theme=&amp;quot;@style/AppTheme.NoToolbar&amp;quot;/&amp;gt;
    &amp;lt;/application&amp;gt;
&amp;lt;/manifest&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Assim como o&lt;code&gt;BeagleActivity&lt;/code&gt;&lt;strong&gt;,&lt;/strong&gt; voc√™ deve informar na declara√ß√£o do &lt;code&gt;PreviewActivity&lt;/code&gt; que o tema que n√£o tem &lt;code&gt;ActionBar,&lt;/code&gt; pois o Beagle j√° coordena esse componente.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;p&gt;Outro ponto importante √© que voc√™ precisa habilitar a flag exportada que poder√° come√ßar via &lt;code&gt;ADB&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;visualizando-telas-no-emulador-do-android-studio&#34;&gt;Visualizando telas no Emulador do Android Studio&lt;/h2&gt;
&lt;p&gt;Ap√≥s realizar estas configura√ß√µes, √© s√≥ &lt;strong&gt;come√ßar o plugin no IntelliJ&lt;/strong&gt; clicando no simbolo do Beagle ao lado da fun√ß√£o que anota &lt;code&gt;@BeaglePreview&lt;/code&gt; e abrir o &lt;code&gt;PreviewActivity&lt;/code&gt; para receber as atualiza√ß√µes do enviadas pelo &lt;code&gt;BFF&lt;/code&gt; para renderiz√°-los automaticamente.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Para come√ßar uma &lt;code&gt;PreviewActivity&lt;/code&gt; via &lt;code&gt;intent&lt;/code&gt;, basta fazer a chamada com &lt;code&gt;intent&lt;/code&gt; abaixo para visualizar a tela no emulador:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;startActivity&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PreviewActivity&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;newIntent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;No entanto, se voc√™ preferir come√ß√°-la por meio por meio da &lt;strong&gt;ADB&lt;/strong&gt;, √© s√≥ chamar o m√©todo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;adb shell am start -n applicationpackagename/br.com.zup.beagle.android.preview.PreviewActivity
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;p&gt;Para mais informa√ß√µes sobre o seu pacote, acesse seu pacote de atributo no seu arquivo &lt;code&gt;AndroidManifest&lt;/code&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;visualizando-telas-no-device-android&#34;&gt;Visualizando telas no Device Android&lt;/h2&gt;
&lt;p&gt;Voc√™ tamb√©m pode visualizar a tela que esta criando utilizando um &lt;code&gt;device&lt;/code&gt; Android. Para isso √© necess√°rio informar o &lt;code&gt;IP&lt;/code&gt; da sua rede no &lt;code&gt;intent&lt;/code&gt; que chama  tela de Live Preview.&lt;/p&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;p&gt;A Activity de Live Preview se conecta a tela no &lt;code&gt;Backend&lt;/code&gt; via uma conex√£o &lt;code&gt;websocket&lt;/code&gt; do &lt;code&gt;client&lt;/code&gt; (emulador ou dispositivo f√≠sico) utilizando o &lt;code&gt;BFF&lt;/code&gt; atrav√©s do plugin &lt;code&gt;BeaglePreview&lt;/code&gt;. Dessa forma, o &lt;code&gt;client&lt;/code&gt; precisa saber qual &lt;code&gt;IP&lt;/code&gt; deve utilizar para estabelecer a conex√£o.&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Para come√ßar uma &lt;code&gt;PreviewActivity&lt;/code&gt; via &lt;code&gt;device&lt;/code&gt;, basta fazer a chamada com o &lt;code&gt;intent&lt;/code&gt; abaixo para visualizar a tela no dispositivo:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;startActivity&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;PreviewActivity&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;newIntent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
            &lt;span style=&#34;color:#000&#34;&gt;endpoint&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://seuIP:9721&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t96-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t96-1&#34;&gt;

&lt;p&gt;&lt;h3 id=&#34;passo-1-instalar-o-subm√≥dulo&#34;&gt;Passo 1: Instalar o subm√≥dulo&lt;/h3&gt;
&lt;p&gt;Para realizar a instala√ß√£o, √© necess√°rio primeiro j√° ter seguido os &lt;a href=&#34;../get-started/installing-beagle/ios.md&#34;&gt;&lt;strong&gt;passos de instala√ß√£o do Beagle para iOS&lt;/strong&gt;&lt;/a&gt;. Assim os passos seguintes variam de acordo com o m√©todo utilizado.&lt;/p&gt;
&lt;h4 id=&#34;utilizando-via-cocoapods&#34;&gt;Utilizando via CocoaPods&lt;/h4&gt;
&lt;p&gt;Adicione a depend√™ncia do LivePreview no seu arquivo Podfile:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;...
pod &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Beagle/Preview&amp;#39;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Depois disso, voc√™ pode instalar essa nova depend√™ncia:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ pod install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;utilizando-via-carthage&#34;&gt;Utilizando via Carthage&lt;/h4&gt;
&lt;p&gt;Junto com o &lt;code&gt;Beagle.framework&lt;/code&gt; gerado, haver√° tamb√©m o &lt;code&gt;BeaglePreview.framework&lt;/code&gt;. Basta ent√£o adicion√°-lo como mais uma depend√™ncia no seu projeto.&lt;/p&gt;
&lt;h3 id=&#34;passo-2-usar&#34;&gt;Passo 2: Usar&lt;/h3&gt;
&lt;p&gt;Depois de instalado, √© necess√°rio agora apresentar o &lt;code&gt;UIViewController&lt;/code&gt; do BeaglePreview utilizando o seguinte c√≥digo &lt;strong&gt;BeaglePreview.present(in:self)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Uma vez que voc√™ fizer isso, ele ir√° se conectar ao plugin e come√ßar a escutar as mensagens recebidas de mudan√ßa de layout.&lt;/p&gt;
&lt;p&gt;Abaixo, voc√™ encontra um exemplo hipot√©tico de como fazer essa inicializa√ß√£o:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Beagle&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ViewController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UIViewController&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;viewDidLoad&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;viewDidLoad&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;viewDidAppear&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;animated&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Bool&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;viewDidAppear&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;animated&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

        &lt;span style=&#34;color:#000&#34;&gt;BeaglePreview&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;present&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&#34;limita√ß√µes&#34;&gt;Limita√ß√µes&lt;/h2&gt;
&lt;p&gt;Durante o uso do Live Preview, existem dois pontos importantes de ter em mente:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;O cliente do Live Preview pode renderizar qualquer altera√ß√£o usando os elementos dispon√≠veis quando o recurso foi iniciado. Os elementos personalizados que forem adicionados posteriormente requerem uma reconstru√ß√£o e reinicializa√ß√£o do cliente.&lt;/li&gt;
&lt;li&gt;A anota√ß√£o &lt;code&gt;@BeaglePreview&lt;/code&gt; funciona com m√©todos p√∫blicos sem par√¢metros, fora de qualquer classe ou em uma classe p√∫blica e que possui um construtor sem par√¢metros, permitindo que ele  retorne um widget. Veja como nos trechos abaixo:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UnsupportedConstructor&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;thing&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Any&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeaglePreview&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;preview&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:(&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SupportedPrimaryConstructor&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeaglePreview&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;preview&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SupportedBySecondaryConstructor&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;thing&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Any&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;constructor&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solved&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeaglePreview&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;preview&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MethodSupport&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeaglePreview&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;supportedMethod&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    
    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeaglePreview&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;unsupportedMethod&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;thing&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Any&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:(&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeaglePreview&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;unsupportedFunction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;thing&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Any&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:(&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeaglePreview&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;supportedFunction&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Navega√ß√£o de telas</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/navega%C3%A7%C3%A3o-de-telas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/navega%C3%A7%C3%A3o-de-telas/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;No Beagle, a navega√ß√£o (ou Navigate) √© um tipo de &lt;a href=&#34;../api/acoes/&#34;&gt;&lt;strong&gt;A√ß√£o&lt;/strong&gt;&lt;/a&gt; e que, por isso, pode ser usada por todos componentes que recebem uma a√ß√£o.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Vale lembrar que, antes de configurar a navega√ß√£o entre telas da sua aplica√ß√£o, √© preciso que voc√™ j√° tenha feito a &lt;a href=&#34;../get-started/installing-beagle/&#34;&gt;&lt;strong&gt;instala√ß√£o do Beagle&lt;/strong&gt;&lt;/a&gt;, as &lt;a href=&#34;../get-started/using-beagle/&#34;&gt;&lt;strong&gt;configura√ß√µes de uso&lt;/strong&gt;&lt;/a&gt; e testado o framework do Beagle no tutorial para &lt;a href=&#34;../tutoriais/exibindo-uma-tela.md&#34;&gt;&lt;strong&gt;exibir uma tela server-driven.&lt;/strong&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Depois de fazer todas as configura√ß√µes, basta colocar o c√≥digo dos exemplos como retorno do seu servi√ßo e chamar o endpoint, definido na sua controller, no frontend de sua prefer√™ncia.&lt;/p&gt;
&lt;h2 id=&#34;rotas-de-navega√ß√£o&#34;&gt;Rotas de Navega√ß√£o&lt;/h2&gt;
&lt;p&gt;Algumas a√ß√µes de navega√ß√£o precisam de um par√¢metro. √â poss√≠vel receber dois tipos de rota, que s√£o:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Local:&lt;/strong&gt; navega√ß√£o interna que j√° espera pela nova &lt;a href=&#34;../api/screen/&#34;&gt;&lt;strong&gt;tela&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Remote:&lt;/strong&gt;  navega√ß√£o que, a partir de uma URL, aponta para uma API que ir√° retornar um ou mais componentes do Beagle.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No exemplo abaixo, voc√™ v√™ um caso onde o &lt;code&gt;route&lt;/code&gt; √© &lt;code&gt;remote&lt;/code&gt;:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t97&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t97-0&#34; role=&#34;tab&#34; aria-controls=&#34;t97-0&#34; aria-selected=&#34;true&#34;&gt;JSON&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t97-1&#34; role=&#34;tab&#34; aria-controls=&#34;t97-1&#34;&gt;Kotlin DSL&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t97&#34;&gt;&lt;div id=&#34;t97-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t97-0&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_beagleComponent_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;beagle:button&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Click me!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;onPress&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_beagleAction_&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;beagle:pushStack&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/my-next-screen&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;shouldPrefetch&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t97-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t97-1&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;Button&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
   &lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Click me!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
   &lt;span style=&#34;color:#000&#34;&gt;onPress&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;listOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
       &lt;span style=&#34;color:#000&#34;&gt;Navigate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PushStack&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
           &lt;span style=&#34;color:#000&#34;&gt;route&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Route&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Remote&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/my-next-screen&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/navigate-remote.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;tipos-de-navega√ß√£o&#34;&gt;Tipos de navega√ß√£o&lt;/h2&gt;
&lt;p&gt;Nas p√°ginas a seguir, voc√™ confere mais detalhes de cada tipo de navega√ß√£o do Beagle:&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Urls</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/recursos/urls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/recursos/urls/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt;A maior parte dos elementos disponibilizados pelo Beagle usa um campo para indicar o caminho para definir as URLs.&lt;/p&gt;
&lt;p&gt;Este campo, em espec√≠fico, √© enviado pelo backend para indicar as chamadas HTTP que o aplicativo precisa fazer e que s√£o gerenciadas pelo cliente do Beagle.&lt;/p&gt;
&lt;h2 id=&#34;tipos-de-caminhos&#34;&gt;Tipos de caminhos&lt;/h2&gt;
&lt;p&gt;Voc√™ tem &lt;strong&gt;duas maneiras de utilizar estes caminhos&lt;/strong&gt; no Beagle:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forma Absoluta&lt;/li&gt;
&lt;li&gt;Forma Relativa&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;caminho-absoluto&#34;&gt;Caminho Absoluto&lt;/h3&gt;
&lt;p&gt;√â o tipo de caminho usado quando voc√™ deseja ignorar a URL base configurada no aplicativo frontend. Se voc√™ faz esta indica√ß√£o, o Beagle entender√° que essa URL j√° est√° completa e ir√° us√°-la dessa forma.&lt;/p&gt;
&lt;p&gt;Um exemplo de caminho absoluto:&lt;strong&gt;&lt;code&gt;https://api.zup.com.br/my-bff/home&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;caminho-relativo&#34;&gt;Caminho Relativo&lt;/h3&gt;
&lt;p&gt;√â o tipo de caminho usado quando voc√™ decide respeitar a URL base configurada no seu aplicativo frontend.&lt;/p&gt;
&lt;p&gt;Por exemplo, se voc√™ definir uma URL base como &lt;strong&gt;&lt;code&gt;https://api.zup.com.br/my-bff&lt;/code&gt;&lt;/strong&gt; e receber um caminho relativo em algum lugar como &lt;code&gt;/ home&lt;/code&gt;, o Beagle ir√° criar a URL completa como &lt;strong&gt;&lt;code&gt;https://api.zup.com. br /my-bff/home&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Sugerimos que voc√™ sempre comece um caminho relativo com uma barra invertida (/), pois esta √© a marca usada no Beagle para indicar que √© uma a URL relativa.
&lt;/div&gt;

&lt;h2 id=&#34;encode-type&#34;&gt;Encode type&lt;/h2&gt;
&lt;p&gt;O Beagle utiliza o padr√£o Encoding type RFC 3986 ao tratar URLs.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
